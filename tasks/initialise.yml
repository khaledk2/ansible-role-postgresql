---
# tasks file for ome.postgresql
##Ansible managed

- block:
    - name: postgres | set permissions on data directory
      file:
        owner: postgres
        group: postgres
        path: "{{ postgresql_dist_datadir }}"
        state: directory
        mode: 0700
      when: postgresql_server_chown_datadir

    - name: >-
        postgres | initialise PostgreSQL cluster (skip if data directory
        already exists)
      command: "{{ postgresql_dist_setup }}"
      args:
        creates: "{{ postgresql_dist_datadir }}/PG_VERSION"

      environment:
        PGSETUP_INITDB_OPTIONS: >-
          --encoding=UTF8 --locale=en_US.UTF-8 --auth-host=md5

    - name: postgres | check for presence of "#Ansible Managed" in file
      ansible.builtin.lineinfile:
        path: "{{ postgresql_dist_confdir }}/postgresql.conf"
        line: "#Ansible managed"
        state: absent
      check_mode: yes
      changed_when: false
      register: config_file_changed

    - name: postgres | check that the postgresql.conf.org file exists
      ansible.builtin.stat:
        path: "{{ postgresql_dist_confdir }}/postgresql.conf.org"
      register: org_file

    - name: postgres | copy a postgresql.conf to postgresql.conf.org
      become_user: "{{ postgresql_become_user }}"
      ansible.builtin.copy:
        src: "{{ postgresql_dist_confdir }}/postgresql.conf"
        dest: "{{ postgresql_dist_confdir }}/postgresql.conf.org"
        remote_src: yes
      when:
        - not config_file_changed.found
        - not org_file.stat.exists

    - name: postgres | get the orginal configuration file
      become_user: "{{ postgresql_become_user }}"
      import_tasks: org_config_file.yml
      when:
        - not org_file.stat.exists
        - config_file_changed.found

    # read the default postgresql configuration file
    - name: postgres | get the postgres conf file contents
      become_user: "{{ postgresql_become_user }}"
      ansible.builtin.slurp:
        src: "{{ postgresql_dist_confdir }}/postgresql.conf.org"
      register: postgres_config_file_contents_o

    - set_fact: postgres_config_file_contents={{ postgres_config_file_contents_o }}

    - name: postgres | copy postgresql config file
      become_user: "{{ postgresql_become_user }}"
      ansible.builtin.template:
        dest: >-
          {{ postgresql_dist_confdir }}/postgresql.conf
        src: "{{ postgresql_dist_conf_postgresql_src }}"
        mode: 0644
        owner: "{{ postgresql_become_user }}"
      notify:
        - restart postgresql

    - name: postgres | configure client authorisation
      become_user: "{{ postgresql_become_user }}"
      template:
        dest: "{{ postgresql_dist_confdir }}/pg_hba.conf"
        src: pg_hba-conf.j2
        mode: 0640
      notify:
        - restart postgresql

    - name: postgres | start service
      service:
        enabled: true
        name: "{{ postgresql_dist_service }}"
        state: started

  become: true
